MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPfallbacks"
Content-Type: application/external-reference

.OPfallbacks

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename=".OPdummydefs"
Content-Type: application/external-reference

.OPdummydefs

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="node_type"
Content-Type: text/plain

Sop

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.init"
Content-Type: text/plain

type = miu::quick_cam_plane::1.1
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.79502 -2.39936
connectornextid 0
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.38 0.69 0.94 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__netbox1.netboxinit"
Content-Type: text/plain

2
2
{
	autofit := 0;
	color := "UT_Color RGB 0.89 0.412 0.761 ";
	comment := "";
	height := 9.8221968268242001;
	minimized := 0;
	width := 6.4025271466272766;
	x_position := -18.842063573313638;
	y_position := -10.764427251234071;
}
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clean1.init"
Content-Type: text/plain

type = clean
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clean1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.60066 -5.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	apply_xform 1 1 "input1"
}
inputs
{
0 	apply_xform 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.942 0.343 0.074 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clean1.parm"
Content-Type: text/plain

{
version 0.8
fusepts	[ 0	locks=0 ]	(	"off"	)
deldegengeo	[ 0	locks=0 ]	(	"off"	)
orientpoly	[ 0	locks=0 ]	(	"off"	)
reversewinding	[ 0	locks=0 ]	(	"off"	)
fixoverlap	[ 0	locks=0 ]	(	"off"	)
deleteoverlap	[ 0	locks=0 ]	(	"on"	)
delunusedpts	[ 0	locks=0 ]	(	"off"	)
dodelattribs	[ 0	locks=0 ]	(	"on"	)
delattribs	[ 0	locks=0 ]	(	xform	)
dodelgroups	[ 0	locks=0 ]	(	"off"	)
delgroups	[ 0	locks=0 ]	(	*	)
delnans	[ 0	locks=0 ]	(	"on"	)
make_manifold	[ 0	locks=0 ]	(	"off"	)
delete_small	[ 0	locks=0 ]	(	"on"	)
prim_count	[ 0	locks=0 ]	(	3	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/clean1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_name.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_name.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5.74404 5.05218
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_name.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "cam"
        label   "Cam"
        type    string
        default { "" }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_name.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"s@camName = chs(\"cam\");
"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
cam	[ 0	locks=0 ]	(	"`opfullpathfrom(chs(\"../cam\"), '..')`"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_name.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_props.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_props.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5.74404 3.97438
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	get_cam_name 0 1 "input1"
}
inputs
{
0 	get_cam_name 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_props.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"// Get Props
float aperture = chf(s@camName + \"/aperture\");
float resX = chf(s@camName + \"/resx\");
float resY = chf(s@camName + \"/resy\");
float aspect = chf(s@camName + \"/aspect\");
float focal = chf(s@camName + \"/focal\");
vector winSize = chv(s@camName + \"/winsize\");
vector winCenter = chv(s@camName + \"/win\");

//Set Plane Size
vector camPlaneSize = {1, 1, 1};
camPlaneSize.x *= aperture;
camPlaneSize.y = aperture * (resY / resX / aspect); 

// Set Plane Center
vector camPlaneCenter = {0, 0, 0};
camPlaneCenter.z = -focal;

// Set Attribs
f@camAperture = aperture;
f@camResX = resX;
f@camResY = resY;
f@camAspect = aspect;
f@camFocal = focal;

v@camWinSize = winSize;
v@camWinCenter = winCenter;

v@camPlaneSize = camPlaneSize;
v@camPlaneCenter = camPlaneCenter;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_props.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_XFORM.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_XFORM.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70658 1.45659
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch1 2 1 "input1"
2 	OUT_CAM_PROPS 1 1 "input2"
}
inputs
{
0 	switch1 0 1
1 	OUT_CAM_PROPS 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_XFORM.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"vector
    planesize = detail(1, \"camPlaneSize\"),
    wincenter = detail(1, \"camWinCenter\"),//v@winCenter,
    winsize = detail(1, \"camWinSize\"),//v@winSize,
    center = {0, 0, 0},//v@camPlaneCenter,
    overscan = set(1, 1, 1);
float
    focal = detail(1, \"camFocal\"),//f@camFocal,
    cropl = 0,
    cropr = 1,
    cropb = 0,
    cropt = 1;

vector P=v@P, P0=P, uv=0;
//vector uv = v@P*{1,1,0} / planesize + 0.5;

// apply crop
//
P /= planesize;
P = fit(P, -0.5, 0.5, set(cropl, cropb, 0), set(cropr, cropt, 0) ) - 0.5;
//P *= set( abs(cropr-cropl), abs(cropt-cropb), 0.0 );
//P += set( (cropl+cropr)*0.5 - 0.5, (cropt+cropb)*0.5 - 0.5, 0.0 );
uv = P*{1,1,0} + 0.5;
P *= planesize;
P.z = P0.z;

// apply center/overscan
//
P += center * planesize;
P *= overscan;

// apply screen window settings (if enabled)
//
if (0) {
    P = ( P+planesize*(wincenter/winsize) ) * winsize;
}

P /= focal;

v@P = P;
v@N = P;
v@rest = P;
v@uv = uv;

setattribtypeinfo(geoself(), \"point\", \"uv\", \"texturecoord\");
"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_XFORM.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.init"
Content-Type: text/plain

type = grid
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -11.4462 3.42879
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.spareparmdef"
Content-Type: text/plain

    parm {
        name    "type"
        baseparm
        label   "Primitive Type"
        export  all
    }
    parm {
        name    "surftype"
        baseparm
        label   "Connectivity"
        export  none
    }
    parm {
        name    "orient"
        baseparm
        label   "Orientation"
        export  all
    }
    parm {
        name    "size"
        baseparm
        label   "Size"
        export  all
    }
    parm {
        name    "t"
        baseparm
        label   "Center"
        export  none
    }
    parm {
        name    "r"
        baseparm
        label   "Rotate"
        export  none
    }
    parm {
        name    "rows"
        baseparm
        label   "Rows"
        export  all
    }
    parm {
        name    "cols"
        baseparm
        label   "Columns"
        export  all
    }
    parm {
        name    "orderu"
        baseparm
        label   "U Order"
        export  none
    }
    parm {
        name    "orderv"
        baseparm
        label   "V Order"
        export  none
    }
    parm {
        name    "interpu"
        baseparm
        label   "End-point interpolate in U"
        export  none
    }
    parm {
        name    "interpv"
        baseparm
        label   "End-point interpolate in V"
        export  none
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.chn"
Content-Type: text/plain

{
    channel sizex {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = "detail(-1, \"camPlaneSize\", 0)" }
    }
    channel sizey {
      lefttype = extend
      righttype = extend
      default = 101010
      flags = 0
      segment { length = 0 value = 101010 101010 expr = "detail(-1, \"camPlaneSize\", 1)" }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "detail(-1, \"camPlaneCenter\", 2)" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.parm"
Content-Type: text/plain

{
version 0.8
type	[ 0	locks=0 ]	(	"points"	)
surftype	[ 0	locks=0 ]	(	"quads"	)
orient	[ 0	locks=0 ]	(	"xy"	)
size	[ 8	locks=0 ]	(	[ sizex	10 ] 	[ sizey	10 ] 	)
t	[ 0	locks=3 ]	(	0	0	[ tz	0 ] 	)
r	[ 0	locks=7 ]	(	0	0	0	)
rows	[ 0	locks=0 ]	(	2	)
cols	[ 0	locks=0 ]	(	2	)
orderu	[ 0	locks=0 ]	(	4	)
orderv	[ 0	locks=0 ]	(	4	)
interpu	[ 0	locks=0 ]	(	"on"	)
interpv	[ 0	locks=0 ]	(	"on"	)
spare_input0	[ 0	locks=0 ]	(	../OUT_CAM_PROPS	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PROPS.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PROPS.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -5.74104 2.7908
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	get_cam_props 1 1 "input1"
}
inputs
{
0 	get_cam_props 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PROPS.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PROPS.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PLANE.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PLANE.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70358 -14.7682
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	add3 1 1 "input1"
}
inputs
{
0 	add3 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PLANE.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_PLANE.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_xform.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_xform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.60366 -3.5999
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(__dot1) "" 1 "input1"
2 	(__dot3) "" 1 "input2"
}
inputs
{
0 	(__dot1) 0 1
1 	(__dot3) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_xform.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"string path = detail(1, \"camName\");
matrix camXform = optransform(path);
4@xform = camXform;
i@__res = detail(1, \"camResX\");"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/get_cam_xform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform.init"
Content-Type: text/plain

type = xformbyattrib
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.60066 -4.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	get_cam_xform 1 1 "input1"
}
inputs
{
0 	get_cam_xform 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
xformattrib	[ 0	locks=0 ]	(	xform	)
invertxform	[ 0	locks=0 ]	(	"off"	)
attribs	[ 0	locks=0 ]	(	*	)
updateaffectednmls	[ 0	locks=0 ]	(	"off"	)
vlength	[ 0	locks=0 ]	(	"on"	)
deletexform	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_ANIMATED_CAM_PLANE.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_ANIMATED_CAM_PLANE.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70358 -15.8609
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	OUT_CAM_PLANE 1 1 "input1"
}
inputs
{
0 	OUT_CAM_PLANE 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.145 0.667 0.557 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_ANIMATED_CAM_PLANE.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_ANIMATED_CAM_PLANE.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_STATIC_CAM_PLANE.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_STATIC_CAM_PLANE.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -3.56677 -13.626
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	(__dot2) "" 1 "input1"
}
inputs
{
0 	(__dot2) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.306 0.306 0.306 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_STATIC_CAM_PLANE.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	1	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_STATIC_CAM_PLANE.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/plane_distance1.init"
Content-Type: text/plain

type = xform
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/plane_distance1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70358 -1.65911
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	set_id 1 1 "input1"
}
inputs
{
0 	set_id 0 1
}
stat
{
  create -1
  modify -1
  author tusi@qLab
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/plane_distance1.chn"
Content-Type: text/plain

{
    channel scale {
      lefttype = extend
      righttype = extend
      default = 0.10000000000000001
      flags = 0
      segment { length = 0 value = 0.10000000000000001 0.10000000000000001 expr = ch(\"../distance\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/plane_distance1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
xOrd	[ 0	locks=0 ]	(	"srt"	)
rOrd	[ 0	locks=0 ]	(	"xyz"	)
t	[ 0	locks=7 ]	(	0	0	0	)
r	[ 0	locks=7 ]	(	0	0	0	)
s	[ 8	locks=7 ]	(	1	1	1	)
shear	[ 0	locks=7 ]	(	0	0	0	)
scale	[ 0	locks=0 ]	(	[ scale	1 ] 	)
parmgroup_pivotxform	[ 0	locks=0 ]	(	0	)
p	[ 0	locks=7 ]	(	0	0	0	)
pr	[ 0	locks=0 ]	(	0	0	0	)
parmgroup_prexform	[ 0	locks=0 ]	(	0	)
prexform_xOrd	[ 0	locks=0 ]	(	"srt"	)
prexform_rOrd	[ 0	locks=0 ]	(	"xyz"	)
prexform_t	[ 0	locks=0 ]	(	0	0	0	)
prexform_r	[ 0	locks=0 ]	(	0	0	0	)
prexform_s	[ 0	locks=0 ]	(	1	1	1	)
prexform_shear	[ 0	locks=0 ]	(	0	0	0	)
movecentroid	[ 0	locks=0 ]	(	0	)
attribs	[ 0	locks=0 ]	(	*	)
updatenmls	[ 0	locks=0 ]	(	"off"	)
updateaffectednmls	[ 0	locks=0 ]	(	"off"	)
vlength	[ 0	locks=0 ]	(	"on"	)
invertxform	[ 0	locks=0 ]	(	"off"	)
addattrib	[ 0	locks=0 ]	(	"off"	)
outputattrib	[ 0	locks=0 ]	(	xform	)
outputmerge	[ 0	locks=0 ]	(	"post"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/plane_distance1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -9.42896 2.2804
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	PLANE_SIMPLE 0 1 "input1"
1 	PLANE_CAM 0 1 "input2"
}
inputs
{
0 	PLANE_SIMPLE 0 1
1 	PLANE_CAM 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../fullRes\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.init"
Content-Type: text/plain

type = grid
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -8.12165 3.42879
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.spareparmdef"
Content-Type: text/plain

    parm {
        name    "type"
        baseparm
        label   "Primitive Type"
        export  all
    }
    parm {
        name    "surftype"
        baseparm
        label   "Connectivity"
        export  none
    }
    parm {
        name    "orient"
        baseparm
        label   "Orientation"
        export  all
    }
    parm {
        name    "size"
        baseparm
        label   "Size"
        export  all
    }
    parm {
        name    "t"
        baseparm
        label   "Center"
        export  none
    }
    parm {
        name    "r"
        baseparm
        label   "Rotate"
        export  none
    }
    parm {
        name    "rows"
        baseparm
        label   "Rows"
        export  all
    }
    parm {
        name    "cols"
        baseparm
        label   "Columns"
        export  all
    }
    parm {
        name    "orderu"
        baseparm
        label   "U Order"
        export  none
    }
    parm {
        name    "orderv"
        baseparm
        label   "V Order"
        export  none
    }
    parm {
        name    "interpu"
        baseparm
        label   "End-point interpolate in U"
        export  none
    }
    parm {
        name    "interpv"
        baseparm
        label   "End-point interpolate in V"
        export  none
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.chn"
Content-Type: text/plain

{
    channel sizex {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = "detail(-1, \"camPlaneSize\", 0)" }
    }
    channel sizey {
      lefttype = extend
      righttype = extend
      default = 101010
      flags = 0
      segment { length = 0 value = 101010 101010 expr = "detail(-1, \"camPlaneSize\", 1)" }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = "detail(-1, \"camPlaneCenter\", 2)" }
    }
    channel rows {
      lefttype = extend
      righttype = extend
      default = 720
      flags = 0
      segment { length = 0 value = 720 720 expr = "detail(-1, \"camResY\", 0)" }
    }
    channel cols {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = "detail(-1, \"camResX\", 0)" }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.parm"
Content-Type: text/plain

{
version 0.8
type	[ 0	locks=0 ]	(	"points"	)
surftype	[ 0	locks=0 ]	(	"quads"	)
orient	[ 0	locks=0 ]	(	"xy"	)
size	[ 0	locks=0 ]	(	[ sizex	10 ] 	[ sizey	10 ] 	)
t	[ 0	locks=3 ]	(	0	0	[ tz	0 ] 	)
r	[ 0	locks=7 ]	(	0	0	0	)
rows	[ 0	locks=0 ]	(	[ rows	10 ] 	)
cols	[ 0	locks=0 ]	(	[ cols	10 ] 	)
orderu	[ 0	locks=0 ]	(	4	)
orderv	[ 0	locks=0 ]	(	4	)
interpu	[ 0	locks=0 ]	(	"on"	)
interpv	[ 0	locks=0 ]	(	"on"	)
spare_input0	[ 0	locks=0 ]	(	../OUT_CAM_PROPS	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70658 -12.6276
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	transformbyattrib1 1 1 "input1"
}
inputs
{
0 	transformbyattrib1 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.spareparmdef"
Content-Type: text/plain

    group {
        name    "folder1"
        label   "Code"

        parm {
            name    "group"
            baseparm
            label   "Group"
            export  none
            bindselector points "Modify Points"
                "Select the points to affect and press Enter to complete."
                0 1 0xffffffff 0 grouptype 0
        }
        parm {
            name    "grouptype"
            baseparm
            label   "Group Type"
            export  none
        }
        parm {
            name    "class"
            baseparm
            label   "Run Over"
            export  none
        }
        parm {
            name    "vex_numcount"
            baseparm
            label   "Number Count"
            export  none
        }
        parm {
            name    "vex_threadjobsize"
            baseparm
            label   "Thread Job Size"
            export  none
        }
        parm {
            name    "snippet"
            baseparm
            label   "VEXpression"
            export  all
        }
        parm {
            name    "exportlist"
            baseparm
            label   "Attributes to Create"
            export  none
        }
        parm {
            name    "vex_strict"
            baseparm
            label   "Enforce Prototypes"
            export  none
        }
    }

    group {
        name    "folder1_1"
        label   "Bindings"

        parm {
            name    "autobind"
            baseparm
            label   "Autobind by Name"
            export  none
        }
        multiparm {
            name    "bindings"
            label    "Number of Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindname#"
                baseparm
                label   "Attribute Name"
                export  none
            }
            parm {
                name    "bindparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "groupautobind"
            baseparm
            label   "Autobind Groups by Name"
            export  none
        }
        multiparm {
            name    "groupbindings"
            label    "Group Bindings"
            baseparm
            default 0
            parmtag { "autoscope" "0000000000000000" }
            parmtag { "multistartoffset" "1" }

            parm {
                name    "bindgroupname#"
                baseparm
                label   "Group Name"
                export  none
            }
            parm {
                name    "bindgroupparm#"
                baseparm
                label   "VEX Parameter"
                export  none
            }
        }

        parm {
            name    "vex_cwdpath"
            baseparm
            label   "Evaluation Node Path"
            export  none
        }
        parm {
            name    "vex_outputmask"
            baseparm
            label   "Export Parameters"
            export  none
        }
        parm {
            name    "vex_updatenmls"
            baseparm
            label   "Update Normals If Displaced"
            export  none
        }
        parm {
            name    "vex_matchattrib"
            baseparm
            label   "Attribute to Match"
            export  none
        }
        parm {
            name    "vex_inplace"
            baseparm
            label   "Compute Results In Place"
            export  none
        }
        parm {
            name    "vex_selectiongroup"
            baseparm
            label   "Output Selection Group"
            export  none
        }
        parm {
            name    "vex_precision"
            baseparm
            label   "VEX Precision"
            export  none
        }
    }

    parm {
        name    "Alpha"
        label   "Alpha"
        type    float
        default { "0" }
        range   { 0 1 }
    }
    parm {
        name    "Color"
        label   "Color"
        type    vector
        size    3
        default { "0" "0" "0" }
        range   { 0 1 }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.chn"
Content-Type: text/plain

{
    channel Colorx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Colorr\") }
    }
    channel Colory {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Colorg\") }
    }
    channel Colorz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../Colorb\") }
    }
    channel Alpha {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../Alpha\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"v@Cd = chv(\"Color\");
f@Alpha = chf(\"Alpha\");"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
folder1	[ 0	locks=0 ]	(	0	0	)
Alpha	[ 0	locks=0 ]	(	[ Alpha	0 ] 	)
Color	[ 0	locks=0 ]	(	[ Colorx	0 ] 	[ Colory	0 ] 	[ Colorz	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribwrangle3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/object_merge1.init"
Content-Type: text/plain

type = object_merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/object_merge1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -1.57485 2.28215
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.976 0.78 0.263 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/object_merge1.parm"
Content-Type: text/plain

{
version 0.8
numobj	[ 0	locks=0 ]	(	1	)
_separator	[ 0	locks=0 ]	(	)
xformtype	[ 0	locks=0 ]	(	"local"	)
xformpath	[ 0	locks=0 ]	(	""	)
invertxform	[ 0	locks=0 ]	(	"off"	)
createptgroups	[ 0	locks=0 ]	(	"off"	)
ptgroupprefix	[ 0	locks=0 ]	(	_ptgrp_	)
createprimgroups	[ 0	locks=0 ]	(	"off"	)
primgroupprefix	[ 0	locks=0 ]	(	_primgrp_	)
verbosegroups	[ 0	locks=0 ]	(	"off"	)
suffixfirstgroup	[ 0	locks=0 ]	(	"on"	)
createptstring	[ 0	locks=0 ]	(	"off"	)
createprimstring	[ 0	locks=0 ]	(	"off"	)
pathattrib	[ 0	locks=0 ]	(	objname	)
pack	[ 0	locks=0 ]	(	"off"	)
pivot	[ 0	locks=0 ]	(	"centroid"	)
viewportlod	[ 0	locks=0 ]	(	"full"	)
addpath	[ 0	locks=0 ]	(	"on"	)
enable1	[ 0	locks=0 ]	(	"on"	)
objpath1	[ 0	locks=0 ]	(	`chsop(\"../get_cam_name/cam\")`/camOrigin	)
group1	[ 0	locks=0 ]	(	""	)
expand1	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/object_merge1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_POS.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_POS.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 0.753493 -13.626
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	object_merge1 0 1 "input1"
}
inputs
{
0 	object_merge1 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.094 0.369 0.69 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_POS.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	2	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/OUT_CAM_POS.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_id.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_id.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70658 0.0956689
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	PLANE_XFORM 1 1 "input1"
}
inputs
{
0 	PLANE_XFORM 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_id.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"point"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"i@rtId = @ptnum;"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/set_id.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.init"
Content-Type: text/plain

type = merge
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70473 -10.5601
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	clean1 1 1 "input1"
1 	invert_xform 1 1 "input2"
}
inputs
{
0 	clean1 0 1
1 	invert_xform 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.parm"
Content-Type: text/plain

{
version 0.8
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/merge1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.init"
Content-Type: text/plain

type = switch
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from switch1"
position -17.4481 2.2804
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	PLANE_SIMPLE1 0 1 "input1"
1 	PLANE_CAM1 0 1 "input2"
}
inputs
{
0 	PLANE_SIMPLE1 0 1
1 	PLANE_CAM1 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.chn"
Content-Type: text/plain

{
    channel input {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../switch1/input\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.parm"
Content-Type: text/plain

{
version 0.8
input	[ 8	locks=0 ]	(	[ input	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/switch2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"referenced_from":{
		"type":"string",
		"value":"../switch1"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.init"
Content-Type: text/plain

type = grid
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from PLANE_CAM"
position -16.1408 3.42879
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "type"
        baseparm
        label   "Primitive Type"
        export  all
    }
    parm {
        name    "surftype"
        baseparm
        label   "Connectivity"
        export  none
    }
    parm {
        name    "orient"
        baseparm
        label   "Orientation"
        export  all
    }
    parm {
        name    "size"
        baseparm
        label   "Size"
        export  all
    }
    parm {
        name    "t"
        baseparm
        label   "Center"
        export  none
    }
    parm {
        name    "r"
        baseparm
        label   "Rotate"
        export  none
    }
    parm {
        name    "rows"
        baseparm
        label   "Rows"
        export  all
    }
    parm {
        name    "cols"
        baseparm
        label   "Columns"
        export  all
    }
    parm {
        name    "orderu"
        baseparm
        label   "U Order"
        export  none
    }
    parm {
        name    "orderv"
        baseparm
        label   "V Order"
        export  none
    }
    parm {
        name    "interpu"
        baseparm
        label   "End-point interpolate in U"
        export  none
    }
    parm {
        name    "interpv"
        baseparm
        label   "End-point interpolate in V"
        export  none
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.chn"
Content-Type: text/plain

{
    channel spare_input0 {
      lefttype = extend
      righttype = extend
      defaultString = \"../OUT_CAM_PROPS\"
      flags = 0
      segment { length = 0 expr = chsop(\"../PLANE_CAM/spare_input0\") }
    }
    channel interpv {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../PLANE_CAM/interpv\") }
    }
    channel interpu {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../PLANE_CAM/interpu\") }
    }
    channel orderv {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_CAM/orderv\") }
    }
    channel orderu {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_CAM/orderu\") }
    }
    channel rz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/rz\") }
    }
    channel ry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/ry\") }
    }
    channel rx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/rx\") }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/tz\") }
    }
    channel ty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/ty\") }
    }
    channel tx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/tx\") }
    }
    channel sizey {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../PLANE_CAM/sizey\") }
    }
    channel sizex {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../PLANE_CAM/sizex\") }
    }
    channel orient {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_CAM/orient\") }
    }
    channel surftype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_CAM/surftype\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.parm"
Content-Type: text/plain

{
version 0.8
type	[ 0	locks=0 ]	(	"poly"	)
surftype	[ 0	locks=0 ]	(	[ surftype	4 ] 	)
orient	[ 0	locks=0 ]	(	[ orient	2 ] 	)
size	[ 0	locks=0 ]	(	[ sizex	10 ] 	[ sizey	10 ] 	)
t	[ 0	locks=3 ]	(	[ tx	0 ] 	[ ty	0 ] 	[ tz	0 ] 	)
r	[ 0	locks=7 ]	(	[ rx	0 ] 	[ ry	0 ] 	[ rz	0 ] 	)
rows	[ 0	locks=0 ]	(	2	)
cols	[ 0	locks=0 ]	(	2	)
orderu	[ 0	locks=0 ]	(	[ orderu	4 ] 	)
orderv	[ 0	locks=0 ]	(	[ orderv	4 ] 	)
interpu	[ 0	locks=0 ]	(	[ interpu	1 ] 	)
interpv	[ 0	locks=0 ]	(	[ interpv	1 ] 	)
spare_input0	[ 0	locks=0 ]	(	[ spare_input0	"" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_CAM1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"referenced_from":{
		"type":"string",
		"value":"../PLANE_CAM"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.init"
Content-Type: text/plain

type = grid
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from PLANE_SIMPLE"
position -19.4654 3.42879
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
0 "output1"
}
inputsNamed3
{
}
inputs
{
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.475 0.812 0.204 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.spareparmdef"
Content-Type: text/plain

    parm {
        name    "type"
        baseparm
        label   "Primitive Type"
        export  all
    }
    parm {
        name    "surftype"
        baseparm
        label   "Connectivity"
        export  none
    }
    parm {
        name    "orient"
        baseparm
        label   "Orientation"
        export  all
    }
    parm {
        name    "size"
        baseparm
        label   "Size"
        export  all
    }
    parm {
        name    "t"
        baseparm
        label   "Center"
        export  none
    }
    parm {
        name    "r"
        baseparm
        label   "Rotate"
        export  none
    }
    parm {
        name    "rows"
        baseparm
        label   "Rows"
        export  all
    }
    parm {
        name    "cols"
        baseparm
        label   "Columns"
        export  all
    }
    parm {
        name    "orderu"
        baseparm
        label   "U Order"
        export  none
    }
    parm {
        name    "orderv"
        baseparm
        label   "V Order"
        export  none
    }
    parm {
        name    "interpu"
        baseparm
        label   "End-point interpolate in U"
        export  none
    }
    parm {
        name    "interpv"
        baseparm
        label   "End-point interpolate in V"
        export  none
    }
    parm {
        name    "spare_input0"
        label   "Spare Input 0"
        type    oppath
        default { "" }
        help    "Refer to this in expressions as -1, such as: npoints(-1)"
        parmtag { "cook_dependent" "1" }
        parmtag { "opfilter" "!!SOP!!" }
        parmtag { "oprelative" "." }
    }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.chn"
Content-Type: text/plain

{
    channel spare_input0 {
      lefttype = extend
      righttype = extend
      defaultString = \"../OUT_CAM_PROPS\"
      flags = 0
      segment { length = 0 expr = chsop(\"../PLANE_SIMPLE/spare_input0\") }
    }
    channel interpv {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../PLANE_SIMPLE/interpv\") }
    }
    channel interpu {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../PLANE_SIMPLE/interpu\") }
    }
    channel orderv {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_SIMPLE/orderv\") }
    }
    channel orderu {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_SIMPLE/orderu\") }
    }
    channel cols {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../PLANE_SIMPLE/cols\") }
    }
    channel rows {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../PLANE_SIMPLE/rows\") }
    }
    channel rz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/rz\") }
    }
    channel ry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/ry\") }
    }
    channel rx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/rx\") }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/tz\") }
    }
    channel ty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/ty\") }
    }
    channel tx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/tx\") }
    }
    channel sizey {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../PLANE_SIMPLE/sizey\") }
    }
    channel sizex {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../PLANE_SIMPLE/sizex\") }
    }
    channel orient {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../PLANE_SIMPLE/orient\") }
    }
    channel surftype {
      lefttype = extend
      righttype = extend
      default = 4
      flags = 0
      segment { length = 0 value = 4 4 expr = ch(\"../PLANE_SIMPLE/surftype\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.parm"
Content-Type: text/plain

{
version 0.8
type	[ 0	locks=0 ]	(	"poly"	)
surftype	[ 0	locks=0 ]	(	[ surftype	4 ] 	)
orient	[ 0	locks=0 ]	(	[ orient	2 ] 	)
size	[ 8	locks=0 ]	(	[ sizex	10 ] 	[ sizey	10 ] 	)
t	[ 0	locks=3 ]	(	[ tx	0 ] 	[ ty	0 ] 	[ tz	0 ] 	)
r	[ 0	locks=7 ]	(	[ rx	0 ] 	[ ry	0 ] 	[ rz	0 ] 	)
rows	[ 0	locks=0 ]	(	[ rows	10 ] 	)
cols	[ 0	locks=0 ]	(	[ cols	10 ] 	)
orderu	[ 0	locks=0 ]	(	[ orderu	4 ] 	)
orderv	[ 0	locks=0 ]	(	[ orderv	4 ] 	)
interpu	[ 0	locks=0 ]	(	[ interpu	1 ] 	)
interpv	[ 0	locks=0 ]	(	[ interpv	1 ] 	)
spare_input0	[ 0	locks=0 ]	(	[ spare_input0	"" ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/PLANE_SIMPLE1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"referenced_from":{
		"type":"string",
		"value":"../PLANE_SIMPLE"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transformbyattrib1.init"
Content-Type: text/plain

type = xformbyattrib
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transformbyattrib1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70358 -11.5877
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	merge1 2 1 "input1"
}
inputs
{
0 	merge1 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transformbyattrib1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
xformattrib	[ 0	locks=0 ]	(	xform	)
invertxform	[ 0	locks=0 ]	(	"on"	)
attribs	[ 0	locks=0 ]	(	*	)
updateaffectednmls	[ 0	locks=0 ]	(	"on"	)
vlength	[ 0	locks=0 ]	(	"on"	)
deletexform	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/transformbyattrib1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add3.init"
Content-Type: text/plain

type = add
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add3.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -7.70358 -13.6655
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribwrangle3 1 1 "input1"
}
inputs
{
0 	attribwrangle3 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add3.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	)
keep	[ 0	locks=0 ]	(	"on"	)
points	[ 0	locks=0 ]	(	1	)
remove	[ 0	locks=0 ]	(	"off"	)
switcher	[ 0	locks=0 ]	(	0	0	)
prims	[ 0	locks=0 ]	(	1	)
group	[ 0	locks=0 ]	(	""	)
add	[ 0	locks=0 ]	(	"all"	)
inc	[ 0	locks=0 ]	(	2	)
attrname	[ 0	locks=0 ]	(	""	)
closedall	[ 0	locks=0 ]	(	"off"	)
addparticlesystem	[ 0	locks=0 ]	(	"off"	)
particlegroup	[ 0	locks=0 ]	(	""	)
appendunusedtoparticlesystem	[ 0	locks=0 ]	(	"off"	)
usept0	[ 0	locks=0 ]	(	"off"	)
pt0	[ 0	locks=0 ]	(	0	0	0	)
weight0	[ 0	locks=0 ]	(	1	)
prim0	[ 0	locks=0 ]	(	""	)
closed0	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/add3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/minimal_plane.init"
Content-Type: text/plain

type = null
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/minimal_plane.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.4481 0.397927
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	switch2 2 1 "input1"
}
inputs
{
0 	switch2 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/minimal_plane.parm"
Content-Type: text/plain

{
version 0.8
copyinput	[ 0	locks=0 ]	(	"on"	)
cacheinput	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/minimal_plane.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform1.init"
Content-Type: text/plain

type = xformbyattrib
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform1.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -18.692 -2.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	process_minimal_plane 3 1 "input1"
}
inputs
{
0 	process_minimal_plane 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform1.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
xformattrib	[ 0	locks=0 ]	(	xform	)
invertxform	[ 0	locks=0 ]	(	"off"	)
attribs	[ 0	locks=0 ]	(	*	)
updateaffectednmls	[ 0	locks=0 ]	(	"off"	)
vlength	[ 0	locks=0 ]	(	"off"	)
deletexform	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform1.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/apply_xform1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/normalize_plane_size.init"
Content-Type: text/plain

type = matchsize
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/normalize_plane_size.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -15.4472 -2.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	process_minimal_plane 3 1 "input1"
}
inputs
{
0 	process_minimal_plane 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.29 0.565 0.886 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/normalize_plane_size.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
sepparm	[ 0	locks=0 ]	(	)
justifytarget	[ 0	locks=0 ]	(	"auto"	)
doboundgroup	[ 0	locks=0 ]	(	"off"	)
folder2	[ 0	locks=0 ]	(	0	)
sourcegroup	[ 0	locks=0 ]	(	""	)
sourcegrouptype	[ 0	locks=0 ]	(	"guess"	)
refgroup	[ 0	locks=0 ]	(	""	)
refgrouptype	[ 0	locks=0 ]	(	"guess"	)
folder1	[ 0	locks=0 ]	(	0	)
t	[ 0	locks=0 ]	(	0	0	0	)
size	[ 0	locks=0 ]	(	1	1	1	)
folder0	[ 0	locks=0 ]	(	0	)
dotranslate	[ 0	locks=0 ]	(	"on"	)
justify_x	[ 0	locks=0 ]	(	"center"	)
goal_x	[ 0	locks=0 ]	(	"same"	)
offset_x	[ 0	locks=0 ]	(	0	)
justify_y	[ 0	locks=0 ]	(	"center"	)
goal_y	[ 0	locks=0 ]	(	"same"	)
offset_y	[ 0	locks=0 ]	(	0	)
justify_z	[ 0	locks=0 ]	(	"center"	)
goal_z	[ 0	locks=0 ]	(	"same"	)
offset_z	[ 0	locks=0 ]	(	0	)
doscale	[ 0	locks=0 ]	(	"on"	)
uniformscale	[ 0	locks=0 ]	(	"on"	)
scale_axis	[ 0	locks=0 ]	(	"min"	)
scale_x	[ 0	locks=0 ]	(	"on"	)
scale_y	[ 0	locks=0 ]	(	"on"	)
scale_z	[ 0	locks=0 ]	(	"on"	)
restorexform	[ 0	locks=0 ]	(	"off"	)
restoreattrib	[ 0	locks=0 ]	(	xform	)
stashxform	[ 0	locks=0 ]	(	"on"	)
stashattrib	[ 0	locks=0 ]	(	xform	)
stashmerge	[ 0	locks=0 ]	(	"replace"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/normalize_plane_size.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/normalize_plane_size.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/extracttransform2.init"
Content-Type: text/plain

type = extracttransform
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/extracttransform2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.0189 -4.56639
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
2 "output1"
}
inputsNamed3
{
0 	apply_xform1 1 1 "input1"
1 	normalize_plane_size 1 1 "input2"
}
inputs
{
0 	apply_xform1 0 1
1 	normalize_plane_size 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/extracttransform2.parm"
Content-Type: text/plain

{
version 0.8
usepieceattrib	[ 0	locks=0 ]	(	"off"	)
pieceattrib	[ 0	locks=0 ]	(	name	)
pieceattribclass	[ 0	locks=0 ]	(	"primitive"	)
extractionmethod	[ 0	locks=0 ]	(	"nonuniformscale"	)
outputattribs	[ 0	locks=0 ]	(	"matrix4"	)
computedistortion	[ 0	locks=0 ]	(	"off"	)
distortionattrib	[ 0	locks=0 ]	(	distortion	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/extracttransform2.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/extracttransform2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribpromote2.init"
Content-Type: text/plain

type = attribpromote
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribpromote2.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.0224 -5.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	extracttransform2 2 1 "input1"
}
inputs
{
0 	extracttransform2 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.976 0.78 0.263 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribpromote2.parm"
Content-Type: text/plain

{
version 0.8
inname	[ 0	locks=0 ]	(	transform	)
inclass	[ 0	locks=0 ]	(	"point"	)
outclass	[ 0	locks=0 ]	(	"detail"	)
usepieceattrib	[ 0	locks=0 ]	(	"off"	)
pieceattrib	[ 0	locks=0 ]	(	name	)
method	[ 0	locks=0 ]	(	"mean"	)
useoutname	[ 0	locks=0 ]	(	"off"	)
outname	[ 0	locks=0 ]	(	""	)
deletein	[ 0	locks=0 ]	(	"on"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribpromote2.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/attribpromote2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_all.init"
Content-Type: text/plain

type = blast
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_all.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.0189 -6.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribpromote2 1 1 "input1"
}
inputs
{
0 	attribpromote2 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 1 0.725 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_all.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
computenorms	[ 0	locks=0 ]	(	"off"	)
negate	[ 0	locks=0 ]	(	"off"	)
fillhole	[ 0	locks=0 ]	(	"off"	)
removegrp	[ 0	locks=0 ]	(	"off"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_all.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/blast_all.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_transform_to_xform.init"
Content-Type: text/plain

type = attribute
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_transform_to_xform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.0224 -8.56639
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	blast_all 1 1 "input1"
}
inputs
{
0 	blast_all 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_transform_to_xform.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	3	3	3	3	3	)
_label1_	[ 0	locks=0 ]	(	From	To	)
ptrenames	[ 0	locks=0 ]	(	5	)
ptdel	[ 0	locks=0 ]	(	""	)
ptkeep	[ 0	locks=0 ]	(	*	)
_label2_	[ 0	locks=0 ]	(	From	To	)
vtxrenames	[ 0	locks=0 ]	(	5	)
vtxdel	[ 0	locks=0 ]	(	""	)
vtxkeep	[ 0	locks=0 ]	(	*	)
_label3_	[ 0	locks=0 ]	(	From	To	)
primrenames	[ 0	locks=0 ]	(	5	)
primdel	[ 0	locks=0 ]	(	""	)
primkeep	[ 0	locks=0 ]	(	*	)
_label4_	[ 0	locks=0 ]	(	From	To	)
detailrenames	[ 0	locks=0 ]	(	5	)
dtldel	[ 0	locks=0 ]	(	""	)
dtlkeep	[ 0	locks=0 ]	(	*	)
_label5_	[ 0	locks=0 ]	(	RiName	RiType	Offset	""	)
rmanconversions	[ 0	locks=0 ]	(	5	)
ridefault	[ 0	locks=0 ]	(	"off"	)
updatevar	[ 0	locks=0 ]	(	"on"	)
overwrite	[ 0	locks=0 ]	(	"off"	)
encodenames	[ 0	locks=0 ]	(	"off"	)
frompt0	[ 0	locks=0 ]	(	""	)
topt0	[ 0	locks=0 ]	(	""	)
frompt1	[ 0	locks=0 ]	(	""	)
topt1	[ 0	locks=0 ]	(	""	)
frompt2	[ 0	locks=0 ]	(	""	)
topt2	[ 0	locks=0 ]	(	""	)
frompt3	[ 0	locks=0 ]	(	""	)
topt3	[ 0	locks=0 ]	(	""	)
frompt4	[ 0	locks=0 ]	(	""	)
topt4	[ 0	locks=0 ]	(	""	)
fromvtx0	[ 0	locks=0 ]	(	""	)
tovtx0	[ 0	locks=0 ]	(	""	)
fromvtx1	[ 0	locks=0 ]	(	""	)
tovtx1	[ 0	locks=0 ]	(	""	)
fromvtx2	[ 0	locks=0 ]	(	""	)
tovtx2	[ 0	locks=0 ]	(	""	)
fromvtx3	[ 0	locks=0 ]	(	""	)
tovtx3	[ 0	locks=0 ]	(	""	)
fromvtx4	[ 0	locks=0 ]	(	""	)
tovtx4	[ 0	locks=0 ]	(	""	)
frompr0	[ 0	locks=0 ]	(	""	)
topr0	[ 0	locks=0 ]	(	""	)
frompr1	[ 0	locks=0 ]	(	""	)
topr1	[ 0	locks=0 ]	(	""	)
frompr2	[ 0	locks=0 ]	(	""	)
topr2	[ 0	locks=0 ]	(	""	)
frompr3	[ 0	locks=0 ]	(	""	)
topr3	[ 0	locks=0 ]	(	""	)
frompr4	[ 0	locks=0 ]	(	""	)
topr4	[ 0	locks=0 ]	(	""	)
fromdtl0	[ 0	locks=0 ]	(	transform	)
todtl0	[ 0	locks=0 ]	(	xform	)
fromdtl1	[ 0	locks=0 ]	(	""	)
todtl1	[ 0	locks=0 ]	(	""	)
fromdtl2	[ 0	locks=0 ]	(	""	)
todtl2	[ 0	locks=0 ]	(	""	)
fromdtl3	[ 0	locks=0 ]	(	""	)
todtl3	[ 0	locks=0 ]	(	""	)
fromdtl4	[ 0	locks=0 ]	(	""	)
todtl4	[ 0	locks=0 ]	(	""	)
hname0	[ 0	locks=0 ]	(	""	)
riname0	[ 0	locks=0 ]	(	""	)
ritype0	[ 0	locks=0 ]	(	vtx_float	)
rioff0	[ 0	locks=0 ]	(	0	)
hname1	[ 0	locks=0 ]	(	""	)
riname1	[ 0	locks=0 ]	(	""	)
ritype1	[ 0	locks=0 ]	(	vtx_float	)
rioff1	[ 0	locks=0 ]	(	0	)
hname2	[ 0	locks=0 ]	(	""	)
riname2	[ 0	locks=0 ]	(	""	)
ritype2	[ 0	locks=0 ]	(	vtx_float	)
rioff2	[ 0	locks=0 ]	(	0	)
hname3	[ 0	locks=0 ]	(	""	)
riname3	[ 0	locks=0 ]	(	""	)
ritype3	[ 0	locks=0 ]	(	vtx_float	)
rioff3	[ 0	locks=0 ]	(	0	)
hname4	[ 0	locks=0 ]	(	""	)
riname4	[ 0	locks=0 ]	(	""	)
ritype4	[ 0	locks=0 ]	(	vtx_float	)
rioff4	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_transform_to_xform.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/rename_transform_to_xform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.init"
Content-Type: text/plain

type = subnet
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.5647 -1.71337
connectornextid 4
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
3 "output1"
}
inputsNamed3
{
0 	(__dot3) "" 1 "input1"
1 	minimal_plane 1 1 "input2"
2 	OUT_CAM_PROPS 1 1 "input3"
}
inputs
{
0 	(__dot3) 0 1
1 	minimal_plane 0 1
2 	OUT_CAM_PROPS 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.parm"
Content-Type: text/plain

{
version 0.8
label1	[ 0	locks=0 ]	(	"Sub-Network Input #1"	)
label2	[ 0	locks=0 ]	(	"Sub-Network Input #2"	)
label3	[ 0	locks=0 ]	(	"Sub-Network Input #3"	)
label4	[ 0	locks=0 ]	(	"Sub-Network Input #4"	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.inp"
Content-Type: text/plain

4
0 0 6.8941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
1 3 7.3941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
2 6 7.8941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"
3 9 8.3941999999999997 2 0 __NO_OWNER_NETWORK_BOX__ "FROMOUTPUT"

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/plane_distance2.init"
Content-Type: text/plain

type = xform
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/plane_distance2.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from plane_distance1"
position 0.003 2.9961
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault off exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	attribwrangle5 1 1 "input1"
}
inputs
{
0 	attribwrangle5 0 1
}
stat
{
  create -1
  modify -1
  author tusi@qLab
  access 0777
}
color UT_Color RGB 0.8 0.8 0.8 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/plane_distance2.chn"
Content-Type: text/plain

{
    channel outputmerge {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../../plane_distance1/outputmerge\") }
    }
    channel outputattrib {
      lefttype = extend
      righttype = extend
      defaultString = \"xform\"
      flags = 0
      segment { length = 0 expr = chs(\"../../plane_distance1/outputattrib\") }
    }
    channel addattrib {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/addattrib\") }
    }
    channel invertxform {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/invertxform\") }
    }
    channel vlength {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/vlength\") }
    }
    channel updateaffectednmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/updateaffectednmls\") }
    }
    channel updatenmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/updatenmls\") }
    }
    channel attribs {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../plane_distance1/attribs\") }
    }
    channel movecentroid {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/movecentroid\") }
    }
    channel prexform_shear3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_shear3\") }
    }
    channel prexform_shear2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_shear2\") }
    }
    channel prexform_shear1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_shear1\") }
    }
    channel prexform_sz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/prexform_sz\") }
    }
    channel prexform_sy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/prexform_sy\") }
    }
    channel prexform_sx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/prexform_sx\") }
    }
    channel prexform_rz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_rz\") }
    }
    channel prexform_ry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_ry\") }
    }
    channel prexform_rx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_rx\") }
    }
    channel prexform_tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_tz\") }
    }
    channel prexform_ty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_ty\") }
    }
    channel prexform_tx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_tx\") }
    }
    channel prexform_rOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_rOrd\") }
    }
    channel prexform_xOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prexform_xOrd\") }
    }
    channel prz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prz\") }
    }
    channel pry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/pry\") }
    }
    channel prx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/prx\") }
    }
    channel pz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/pz\") }
    }
    channel py {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/py\") }
    }
    channel px {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/px\") }
    }
    channel scale {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/scale\") }
    }
    channel shear3 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/shear3\") }
    }
    channel shear2 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/shear2\") }
    }
    channel shear1 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/shear1\") }
    }
    channel sz {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/sz\") }
    }
    channel sy {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/sy\") }
    }
    channel sx {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../plane_distance1/sx\") }
    }
    channel rz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/rz\") }
    }
    channel ry {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/ry\") }
    }
    channel rx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/rx\") }
    }
    channel tz {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/tz\") }
    }
    channel ty {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/ty\") }
    }
    channel tx {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/tx\") }
    }
    channel rOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/rOrd\") }
    }
    channel xOrd {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/xOrd\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../plane_distance1/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../plane_distance1/group\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/plane_distance2.parm"
Content-Type: text/plain

{
version 0.8
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
xOrd	[ 0	locks=0 ]	(	[ xOrd	0 ] 	)
rOrd	[ 0	locks=0 ]	(	[ rOrd	0 ] 	)
t	[ 0	locks=7 ]	(	[ tx	0 ] 	[ ty	0 ] 	[ tz	0 ] 	)
r	[ 0	locks=7 ]	(	[ rx	0 ] 	[ ry	0 ] 	[ rz	0 ] 	)
s	[ 8	locks=7 ]	(	[ sx	1 ] 	[ sy	1 ] 	[ sz	1 ] 	)
shear	[ 0	locks=7 ]	(	[ shear1	0 ] 	[ shear2	0 ] 	[ shear3	0 ] 	)
scale	[ 0	locks=0 ]	(	[ scale	1 ] 	)
parmgroup_pivotxform	[ 0	locks=0 ]	(	0	)
p	[ 0	locks=7 ]	(	[ px	0 ] 	[ py	0 ] 	[ pz	0 ] 	)
pr	[ 0	locks=0 ]	(	[ prx	0 ] 	[ pry	0 ] 	[ prz	0 ] 	)
parmgroup_prexform	[ 0	locks=0 ]	(	0	)
prexform_xOrd	[ 0	locks=0 ]	(	[ prexform_xOrd	0 ] 	)
prexform_rOrd	[ 0	locks=0 ]	(	[ prexform_rOrd	0 ] 	)
prexform_t	[ 0	locks=0 ]	(	[ prexform_tx	0 ] 	[ prexform_ty	0 ] 	[ prexform_tz	0 ] 	)
prexform_r	[ 0	locks=0 ]	(	[ prexform_rx	0 ] 	[ prexform_ry	0 ] 	[ prexform_rz	0 ] 	)
prexform_s	[ 0	locks=0 ]	(	[ prexform_sx	1 ] 	[ prexform_sy	1 ] 	[ prexform_sz	1 ] 	)
prexform_shear	[ 0	locks=0 ]	(	[ prexform_shear1	0 ] 	[ prexform_shear2	0 ] 	[ prexform_shear3	0 ] 	)
movecentroid	[ 0	locks=0 ]	(	[ movecentroid	0 ] 	)
attribs	[ 0	locks=0 ]	(	[ attribs	* ] 	)
updatenmls	[ 0	locks=0 ]	(	[ updatenmls	0 ] 	)
updateaffectednmls	[ 0	locks=0 ]	(	[ updateaffectednmls	1 ] 	)
vlength	[ 0	locks=0 ]	(	[ vlength	1 ] 	)
invertxform	[ 0	locks=0 ]	(	[ invertxform	0 ] 	)
addattrib	[ 0	locks=0 ]	(	[ addattrib	0 ] 	)
outputattrib	[ 0	locks=0 ]	(	[ outputattrib	xform ] 	)
outputmerge	[ 0	locks=0 ]	(	[ outputmerge	2 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/plane_distance2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"referenced_from":{
		"type":"string",
		"value":"../plane_distance1"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform1.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from get_cam_xform"
position 0 -5.73747
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	add3 1 1 "input1"
2 	(__dot5) "" 1 "input2"
}
inputs
{
0 	add3 0 1
1 	(__dot5) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform1.chn"
Content-Type: text/plain

{
    channel vex_precision {
      lefttype = extend
      righttype = extend
      defaultString = \"auto\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_precision\") }
    }
    channel vex_selectiongroup {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_selectiongroup\") }
    }
    channel vex_inplace {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_inplace\") }
    }
    channel vex_matchattrib {
      lefttype = extend
      righttype = extend
      defaultString = \"id\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_matchattrib\") }
    }
    channel vex_updatenmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_updatenmls\") }
    }
    channel vex_outputmask {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_outputmask\") }
    }
    channel vex_cwdpath {
      lefttype = extend
      righttype = extend
      defaultString = \".\"
      flags = 0
      segment { length = 0 expr = chsop(\"../../get_cam_xform/vex_cwdpath\") }
    }
    channel groupautobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../get_cam_xform/groupautobind\") }
    }
    channel autobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../get_cam_xform/autobind\") }
    }
    channel vex_strict {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_strict\") }
    }
    channel exportlist {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/exportlist\") }
    }
    channel snippet {
      lefttype = extend
      righttype = extend
      defaultString = "\"string path = detail(1, \\\"camName\\\");
matrix camXform = optransform(path);
4@xform = camXform;
i@__res = detail(1, \\\"camResX\\\");\""
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/snippet\") }
    }
    channel vex_threadjobsize {
      lefttype = extend
      righttype = extend
      default = 1024
      flags = 0
      segment { length = 0 value = 1024 1024 expr = ch(\"../../get_cam_xform/vex_threadjobsize\") }
    }
    channel vex_numcount {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../../get_cam_xform/vex_numcount\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/class\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/group\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	[ vex_numcount	10 ] 	)
vex_threadjobsize	[ 0	locks=0 ]	(	[ vex_threadjobsize	1024 ] 	)
snippet	[ 0	locks=0 ]	(	[ snippet	"" ] 	)
exportlist	[ 0	locks=0 ]	(	[ exportlist	* ] 	)
vex_strict	[ 0	locks=0 ]	(	[ vex_strict	0 ] 	)
autobind	[ 0	locks=0 ]	(	[ autobind	1 ] 	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	[ groupautobind	1 ] 	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	[ vex_cwdpath	. ] 	)
vex_outputmask	[ 0	locks=0 ]	(	[ vex_outputmask	* ] 	)
vex_updatenmls	[ 0	locks=0 ]	(	[ vex_updatenmls	0 ] 	)
vex_matchattrib	[ 0	locks=0 ]	(	[ vex_matchattrib	id ] 	)
vex_inplace	[ 0	locks=0 ]	(	[ vex_inplace	0 ] 	)
vex_selectiongroup	[ 0	locks=0 ]	(	[ vex_selectiongroup	"" ] 	)
vex_precision	[ 0	locks=0 ]	(	[ vex_precision	auto ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"referenced_from":{
		"type":"string",
		"value":"../get_cam_xform"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/add3.init"
Content-Type: text/plain

type = add
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/add3.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from add1"
position -0.2047 -0.703324
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass on display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(__dot4) "" 1 "input1"
}
inputs
{
0 	(__dot4) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.98 0.275 0.275 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/add3.chn"
Content-Type: text/plain

{
    channel closed0 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/closed0\") }
    }
    channel prim0 {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../add1/prim0\") }
    }
    channel weight0 {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../add1/weight0\") }
    }
    channel pt0z {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/pt0z\") }
    }
    channel pt0y {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/pt0y\") }
    }
    channel pt0x {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/pt0x\") }
    }
    channel usept0 {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/usept0\") }
    }
    channel appendunusedtoparticlesystem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/appendunusedtoparticlesystem\") }
    }
    channel particlegroup {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../add1/particlegroup\") }
    }
    channel addparticlesystem {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/addparticlesystem\") }
    }
    channel closedall {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/closedall\") }
    }
    channel attrname {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../add1/attrname\") }
    }
    channel inc {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../../add1/inc\") }
    }
    channel add {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/add\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../add1/group\") }
    }
    channel remove {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../add1/remove\") }
    }
    channel keep {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../add1/keep\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/add3.parm"
Content-Type: text/plain

{
version 0.8
stdswitcher	[ 0	locks=0 ]	(	0	0	0	)
keep	[ 0	locks=0 ]	(	[ keep	0 ] 	)
points	[ 0	locks=0 ]	(	1	)
remove	[ 0	locks=0 ]	(	[ remove	0 ] 	)
switcher	[ 0	locks=0 ]	(	0	0	)
prims	[ 0	locks=0 ]	(	1	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
add	[ 0	locks=0 ]	(	[ add	0 ] 	)
inc	[ 0	locks=0 ]	(	[ inc	2 ] 	)
attrname	[ 0	locks=0 ]	(	[ attrname	"" ] 	)
closedall	[ 0	locks=0 ]	(	[ closedall	0 ] 	)
addparticlesystem	[ 0	locks=0 ]	(	[ addparticlesystem	0 ] 	)
particlegroup	[ 0	locks=0 ]	(	[ particlegroup	"" ] 	)
appendunusedtoparticlesystem	[ 0	locks=0 ]	(	[ appendunusedtoparticlesystem	0 ] 	)
usept0	[ 0	locks=0 ]	(	[ usept0	0 ] 	)
pt0	[ 0	locks=0 ]	(	[ pt0x	0 ] 	[ pt0y	0 ] 	[ pt0z	0 ] 	)
weight0	[ 0	locks=0 ]	(	[ weight0	1 ] 	)
prim0	[ 0	locks=0 ]	(	[ prim0	"" ] 	)
closed0	[ 0	locks=0 ]	(	[ closed0	0 ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/add3.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	},
	"referenced_from":{
		"type":"string",
		"value":"../add1"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/PLANE_XFORM1.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/PLANE_XFORM1.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from PLANE_XFORM"
position 0 6.1118
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	(1) "" 1 "input1"
2 	(2) "" 1 "input2"
}
inputs
{
0 	(1) 0 1
1 	(2) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/PLANE_XFORM1.chn"
Content-Type: text/plain

{
    channel vex_precision {
      lefttype = extend
      righttype = extend
      defaultString = \"auto\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/vex_precision\") }
    }
    channel vex_selectiongroup {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/vex_selectiongroup\") }
    }
    channel vex_inplace {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../PLANE_XFORM/vex_inplace\") }
    }
    channel vex_matchattrib {
      lefttype = extend
      righttype = extend
      defaultString = \"id\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/vex_matchattrib\") }
    }
    channel vex_updatenmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../PLANE_XFORM/vex_updatenmls\") }
    }
    channel vex_outputmask {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/vex_outputmask\") }
    }
    channel vex_cwdpath {
      lefttype = extend
      righttype = extend
      defaultString = \".\"
      flags = 0
      segment { length = 0 expr = chsop(\"../../PLANE_XFORM/vex_cwdpath\") }
    }
    channel groupautobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../PLANE_XFORM/groupautobind\") }
    }
    channel autobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../PLANE_XFORM/autobind\") }
    }
    channel vex_strict {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../PLANE_XFORM/vex_strict\") }
    }
    channel exportlist {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/exportlist\") }
    }
    channel snippet {
      lefttype = extend
      righttype = extend
      defaultString = "\"vector
    planesize = detail(1, \\\"camPlaneSize\\\"),
    wincenter = detail(1, \\\"camWinCenter\\\"),//v@winCenter,
    winsize = detail(1, \\\"camWinSize\\\"),//v@winSize,
    center = {0, 0, 0},//v@camPlaneCenter,
    overscan = set(1, 1, 1);
float
    focal = detail(1, \\\"camFocal\\\"),//f@camFocal,
    cropl = 0,
    cropr = 1,
    cropb = 0,
    cropt = 1;

vector P=v@P, P0=P, uv=0;
//vector uv = v@P*{1,1,0} / planesize + 0.5;

// apply crop
//
P /= planesize;
P = fit(P, -0.5, 0.5, set(cropl, cropb, 0), set(cropr, cropt, 0) ) - 0.5;
//P *= set( abs(cropr-cropl), abs(cropt-cropb), 0.0 );
//P += set( (cropl+cropr)*0.5 - 0.5, (cropt+cropb)*0.5 - 0.5, 0.0 );
uv = P*{1,1,0} + 0.5;
P *= planesize;
P.z = P0.z;

// apply center/overscan
//
P += center * planesize;
P *= overscan;

// apply screen window settings (if enabled)
//
if (0) {
    P = ( P+planesize*(wincenter/winsize) ) * winsize;
}

P /= focal;

v@P = P;
v@N = P;
v@rest = P;
v@uv = uv;

setattribtypeinfo(geoself(), \\\"point\\\", \\\"uv\\\", \\\"texturecoord\\\");
\""
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/snippet\") }
    }
    channel vex_threadjobsize {
      lefttype = extend
      righttype = extend
      default = 1024
      flags = 0
      segment { length = 0 value = 1024 1024 expr = ch(\"../../PLANE_XFORM/vex_threadjobsize\") }
    }
    channel vex_numcount {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../../PLANE_XFORM/vex_numcount\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../../PLANE_XFORM/class\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../PLANE_XFORM/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../PLANE_XFORM/group\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/PLANE_XFORM1.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	[ vex_numcount	10 ] 	)
vex_threadjobsize	[ 0	locks=0 ]	(	[ vex_threadjobsize	1024 ] 	)
snippet	[ 0	locks=0 ]	(	[ snippet	"" ] 	)
exportlist	[ 0	locks=0 ]	(	[ exportlist	* ] 	)
vex_strict	[ 0	locks=0 ]	(	[ vex_strict	0 ] 	)
autobind	[ 0	locks=0 ]	(	[ autobind	1 ] 	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	[ groupautobind	1 ] 	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	[ vex_cwdpath	. ] 	)
vex_outputmask	[ 0	locks=0 ]	(	[ vex_outputmask	* ] 	)
vex_updatenmls	[ 0	locks=0 ]	(	[ vex_updatenmls	0 ] 	)
vex_matchattrib	[ 0	locks=0 ]	(	[ vex_matchattrib	id ] 	)
vex_inplace	[ 0	locks=0 ]	(	[ vex_inplace	0 ] 	)
vex_selectiongroup	[ 0	locks=0 ]	(	[ vex_selectiongroup	"" ] 	)
vex_precision	[ 0	locks=0 ]	(	[ vex_precision	auto ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/PLANE_XFORM1.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"referenced_from":{
		"type":"string",
		"value":"../PLANE_XFORM"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/attribwrangle5.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/attribwrangle5.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from attribwrangle1"
position 0 4.75088
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	PLANE_XFORM1 1 1 "input1"
}
inputs
{
0 	PLANE_XFORM1 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/attribwrangle5.chn"
Content-Type: text/plain

{
    channel vex_precision {
      lefttype = extend
      righttype = extend
      defaultString = \"auto\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/vex_precision\") }
    }
    channel vex_selectiongroup {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/vex_selectiongroup\") }
    }
    channel vex_inplace {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../set_id/vex_inplace\") }
    }
    channel vex_matchattrib {
      lefttype = extend
      righttype = extend
      defaultString = \"id\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/vex_matchattrib\") }
    }
    channel vex_updatenmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../set_id/vex_updatenmls\") }
    }
    channel vex_outputmask {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/vex_outputmask\") }
    }
    channel vex_cwdpath {
      lefttype = extend
      righttype = extend
      defaultString = \".\"
      flags = 0
      segment { length = 0 expr = chsop(\"../../set_id/vex_cwdpath\") }
    }
    channel groupautobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../set_id/groupautobind\") }
    }
    channel autobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../set_id/autobind\") }
    }
    channel vex_strict {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../set_id/vex_strict\") }
    }
    channel exportlist {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/exportlist\") }
    }
    channel snippet {
      lefttype = extend
      righttype = extend
      defaultString = "\"i@rtId = @ptnum;\""
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/snippet\") }
    }
    channel vex_threadjobsize {
      lefttype = extend
      righttype = extend
      default = 1024
      flags = 0
      segment { length = 0 value = 1024 1024 expr = ch(\"../../set_id/vex_threadjobsize\") }
    }
    channel vex_numcount {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../../set_id/vex_numcount\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      default = 2
      flags = 0
      segment { length = 0 value = 2 2 expr = ch(\"../../set_id/class\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../set_id/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../set_id/group\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/attribwrangle5.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	[ vex_numcount	10 ] 	)
vex_threadjobsize	[ 0	locks=0 ]	(	[ vex_threadjobsize	1024 ] 	)
snippet	[ 0	locks=0 ]	(	[ snippet	"" ] 	)
exportlist	[ 0	locks=0 ]	(	[ exportlist	* ] 	)
vex_strict	[ 0	locks=0 ]	(	[ vex_strict	0 ] 	)
autobind	[ 0	locks=0 ]	(	[ autobind	1 ] 	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	[ groupautobind	1 ] 	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	[ vex_cwdpath	. ] 	)
vex_outputmask	[ 0	locks=0 ]	(	[ vex_outputmask	* ] 	)
vex_updatenmls	[ 0	locks=0 ]	(	[ vex_updatenmls	0 ] 	)
vex_matchattrib	[ 0	locks=0 ]	(	[ vex_matchattrib	id ] 	)
vex_inplace	[ 0	locks=0 ]	(	[ vex_inplace	0 ] 	)
vex_selectiongroup	[ 0	locks=0 ]	(	[ vex_selectiongroup	"" ] 	)
vex_precision	[ 0	locks=0 ]	(	[ vex_precision	auto ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/attribwrangle5.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"referenced_from":{
		"type":"string",
		"value":"../attribwrangle1"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform2.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform2.def"
Content-Type: text/plain

sopflags sopflags = 
comment "Referenced from get_cam_xform"
position 0 -7.74407
connectornextid 3
flags =  lock off model off template off footprint off xray off bypass off display on render on highlight off unload off savedata off compress on colordefault on exposed on displaycomment on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	get_cam_xform1 1 1 "input1"
2 	(0) "" 1 "input2"
}
inputs
{
0 	get_cam_xform1 0 1
1 	(0) 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform2.chn"
Content-Type: text/plain

{
    channel vex_precision {
      lefttype = extend
      righttype = extend
      defaultString = \"auto\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_precision\") }
    }
    channel vex_selectiongroup {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_selectiongroup\") }
    }
    channel vex_inplace {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_inplace\") }
    }
    channel vex_matchattrib {
      lefttype = extend
      righttype = extend
      defaultString = \"id\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_matchattrib\") }
    }
    channel vex_updatenmls {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_updatenmls\") }
    }
    channel vex_outputmask {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/vex_outputmask\") }
    }
    channel vex_cwdpath {
      lefttype = extend
      righttype = extend
      defaultString = \".\"
      flags = 0
      segment { length = 0 expr = chsop(\"../../get_cam_xform/vex_cwdpath\") }
    }
    channel groupautobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../get_cam_xform/groupautobind\") }
    }
    channel autobind {
      lefttype = extend
      righttype = extend
      default = 1
      flags = 0
      segment { length = 0 value = 1 1 expr = ch(\"../../get_cam_xform/autobind\") }
    }
    channel vex_strict {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/vex_strict\") }
    }
    channel exportlist {
      lefttype = extend
      righttype = extend
      defaultString = \"*\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/exportlist\") }
    }
    channel snippet {
      lefttype = extend
      righttype = extend
      defaultString = "\"string path = detail(1, \\\"camName\\\");
matrix camXform = optransform(path);
4@xform = camXform;
i@__res = detail(1, \\\"camResX\\\");\""
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/snippet\") }
    }
    channel vex_threadjobsize {
      lefttype = extend
      righttype = extend
      default = 1024
      flags = 0
      segment { length = 0 value = 1024 1024 expr = ch(\"../../get_cam_xform/vex_threadjobsize\") }
    }
    channel vex_numcount {
      lefttype = extend
      righttype = extend
      default = 10
      flags = 0
      segment { length = 0 value = 10 10 expr = ch(\"../../get_cam_xform/vex_numcount\") }
    }
    channel class {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/class\") }
    }
    channel grouptype {
      lefttype = extend
      righttype = extend
      flags = 0
      segment { length = 0 expr = ch(\"../../get_cam_xform/grouptype\") }
    }
    channel group {
      lefttype = extend
      righttype = extend
      defaultString = \"\"
      flags = 0
      segment { length = 0 expr = chs(\"../../get_cam_xform/group\") }
    }
  }

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform2.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	[ group	"" ] 	)
grouptype	[ 0	locks=0 ]	(	[ grouptype	0 ] 	)
class	[ 0	locks=0 ]	(	[ class	2 ] 	)
vex_numcount	[ 0	locks=0 ]	(	[ vex_numcount	10 ] 	)
vex_threadjobsize	[ 0	locks=0 ]	(	[ vex_threadjobsize	1024 ] 	)
snippet	[ 0	locks=0 ]	(	[ snippet	"" ] 	)
exportlist	[ 0	locks=0 ]	(	[ exportlist	* ] 	)
vex_strict	[ 0	locks=0 ]	(	[ vex_strict	0 ] 	)
autobind	[ 0	locks=0 ]	(	[ autobind	1 ] 	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	[ groupautobind	1 ] 	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	[ vex_cwdpath	. ] 	)
vex_outputmask	[ 0	locks=0 ]	(	[ vex_outputmask	* ] 	)
vex_updatenmls	[ 0	locks=0 ]	(	[ vex_updatenmls	0 ] 	)
vex_matchattrib	[ 0	locks=0 ]	(	[ vex_matchattrib	id ] 	)
vex_inplace	[ 0	locks=0 ]	(	[ vex_inplace	0 ] 	)
vex_selectiongroup	[ 0	locks=0 ]	(	[ vex_selectiongroup	"" ] 	)
vex_precision	[ 0	locks=0 ]	(	[ vex_precision	auto ] 	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/get_cam_xform2.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	},
	"referenced_from":{
		"type":"string",
		"value":"../get_cam_xform"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/output0.init"
Content-Type: text/plain

type = output
matchesdef = 0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/output0.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position 3.55271e-15 -8.63827
connectornextid 1
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
}
inputsNamed3
{
0 	get_cam_xform2 1 1 "input1"
}
inputs
{
0 	get_cam_xform2 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0 0 0 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/output0.parm"
Content-Type: text/plain

{
version 0.8
outputidx	[ 0	locks=0 ]	(	0	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/output0.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":"___EXTERNAL___"
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/__dot4.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":0.50302451839999307,
	"posy":2.20609995837986306,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"plane_distance2 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane/__dot5.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":2.60881013411967189,
	"posy":-3.67153193104451159,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"(2) 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.order"
Content-Type: text/plain

7
plane_distance2
get_cam_xform1
add3
PLANE_XFORM1
attribwrangle5
get_cam_xform2
output0

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/process_minimal_plane.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/invert_xform.init"
Content-Type: text/plain

type = attribwrangle
matchesdef = 1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/invert_xform.def"
Content-Type: text/plain

sopflags sopflags = 
comment ""
position -17.0219 -9.81019
connectornextid 2
flags =  lock off model off template off footprint off xray off bypass off display off render off highlight off unload off savedata off compress on colordefault on exposed on
outputsNamed3
{
1 "output1"
}
inputsNamed3
{
0 	rename_transform_to_xform 1 1 "input1"
}
inputs
{
0 	rename_transform_to_xform 0 1
}
stat
{
  create -1
  modify -1
  author simon@ws-win
  access 0777
}
color UT_Color RGB 0.188 0.529 0.459 
delscript ""
exprlanguage hscript
end

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/invert_xform.parm"
Content-Type: text/plain

{
version 0.8
folder0	[ 0	locks=0 ]	(	0	0	)
group	[ 0	locks=0 ]	(	""	)
grouptype	[ 0	locks=0 ]	(	"guess"	)
class	[ 0	locks=0 ]	(	"detail"	)
vex_numcount	[ 0	locks=0 ]	(	10	)
vex_threadjobsize	[ 0	locks=0 ]	(	1024	)
snippet	[ 0	locks=0 ]	(	"4@xform = invert(4@xform);"	)
exportlist	[ 0	locks=0 ]	(	*	)
vex_strict	[ 0	locks=0 ]	(	"off"	)
autobind	[ 0	locks=0 ]	(	"on"	)
bindings	[ 0	locks=0 ]	(	0	)
groupautobind	[ 0	locks=0 ]	(	"on"	)
groupbindings	[ 0	locks=0 ]	(	0	)
vex_cwdpath	[ 0	locks=0 ]	(	.	)
vex_outputmask	[ 0	locks=0 ]	(	*	)
vex_updatenmls	[ 0	locks=0 ]	(	"off"	)
vex_matchattrib	[ 0	locks=0 ]	(	id	)
vex_inplace	[ 0	locks=0 ]	(	"off"	)
vex_selectiongroup	[ 0	locks=0 ]	(	""	)
vex_precision	[ 0	locks=0 ]	(	auto	)
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/invert_xform.netbox"
Content-Type: text/plain

__netbox1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/invert_xform.userdata"
Content-Type: text/plain

{
	"___Version___":{
		"type":"string",
		"value":""
	}
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot1.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":-7.20357999999999965,
	"posy":-2.44911001602172806,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"plane_distance1 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot2.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":-3.06677426400032971,
	"posy":-2.44911001602172806,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"(__dot1) 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot/__dot3.networkdotinit"
Content-Type: text/plain

{
	"version":1,
	"posx":-5.24103999999999992,
	"posy":0.00987714812484874471,
	"pinned":false,
	"color":"FROMOUTPUT",
	"input":"OUT_CAM_PROPS 0 1"
}

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.order"
Content-Type: text/plain

33
clean1
get_cam_name
get_cam_props
PLANE_XFORM
PLANE_SIMPLE
OUT_CAM_PROPS
OUT_CAM_PLANE
get_cam_xform
apply_xform
OUT_ANIMATED_CAM_PLANE
OUT_STATIC_CAM_PLANE
plane_distance1
switch1
PLANE_CAM
attribwrangle3
object_merge1
OUT_CAM_POS
set_id
merge1
switch2
PLANE_CAM1
PLANE_SIMPLE1
transformbyattrib1
add3
minimal_plane
apply_xform1
normalize_plane_size
extracttransform2
attribpromote2
blast_all
rename_transform_to_xform
process_minimal_plane
invert_xform

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY
Content-Disposition: attachment; filename="hdaroot.net"
Content-Type: text/plain

1

--HOUDINIMIMEBOUNDARY0xD3ADD339-0x00000F49-0x56B122C9-0x00000001HOUDINIMIMEBOUNDARY--
